#!/bin/bash

# --- begin runfiles.bash initialization v3 ---
# Copy-pasted from the Bazel Bash runfiles library v3.
set -uo pipefail; set +e; f=bazel_tools/tools/bash/runfiles/runfiles.bash
# shellcheck disable=SC1090
source "${RUNFILES_DIR:-/dev/null}/$f" 2>/dev/null || \
  source "$(grep -sm1 "^$f " "${RUNFILES_MANIFEST_FILE:-/dev/null}" | cut -f2- -d' ')" 2>/dev/null || \
  source "$0.runfiles/$f" 2>/dev/null || \
  source "$(grep -sm1 "^$f " "$0.runfiles_manifest" | cut -f2- -d' ')" 2>/dev/null || \
  source "$(grep -sm1 "^$f " "$0.exe.runfiles_manifest" | cut -f2- -d' ')" 2>/dev/null || \
  { echo>&2 "ERROR: cannot find $f"; exit 1; }; f=; set -e
# --- end runfiles.bash initialization v3 ---

orig=${LD_LIBRARY_PATH:-}
declare -a ldpaths=@@ldpaths@@
LD_LIBRARY_PATH=

function _add {
   if [ -n "$LD_LIBRARY_PATH" ]
   then
      LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$1
   else
      LD_LIBRARY_PATH=$1
   fi
}

for p in "${ldpaths[@]}"
do
   path=$(rlocation "$p")
   if [ -n "$path" ]
   then
      _add "$path"
   fi
done
_add "$orig"

run=$(rlocation @@run@@)
echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}"
export LD_LIBRARY_PATH
exec "$run" "$@"
